@using Microsoft.AspNetCore.Identity
@using NoteApp.Areas.Identity.Data
@model IEnumerable<NoteApp.Models.Note>
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Notes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>My Notes</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Create <i class="fa-solid fa-plus"></i></a>
    <a class="btn btn-success" asp-action="Download">Download All<i class="ms-2 fa-solid fa-arrow-down"></i> </a>
</p>


    <table id="example" class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.NoteDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NoteState)
                </th>
                <th></th>
            </tr>
        </thead>
       
        <tbody>
        @if (User.IsInRole("Admin"))
        {
            foreach (var item in Model)
            {
                //tahle podmínka by měla být dobře, ale nefunguje "IsInRole Admin", nezobrazí se nic, takže bude problém někde v databázi.
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.NoteDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateStart)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateEnd)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NoteState)
                    </td>
                    <td>
                        <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            foreach (var item in Model)
            {
                if (item.NoteUserId == @UserManager.GetUserId(User))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.NoteDescription)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateStart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateEnd)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NoteState)
                        </td>
                        <td>
                            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            }
        }
    
            

        
        </tbody>
    </table>

